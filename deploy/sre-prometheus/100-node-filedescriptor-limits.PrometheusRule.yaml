apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: sre-node-filedescriptor-limit
    role: alert-rules
  name: sre-node-filedescriptor-limit
  namespace: openshift-monitoring
spec:
  groups:
  - name: sre-controlplane-node-filedescriptor-limit
    rules:
    - alert: ControlPlaneNodeFileDescriptorLimitSRE
      # This is the same as the upstream alert, but groups by instance id (which is which node is affected)
      # and then only fires on the control-plane, infra, or master node roles.
      # See the ocm-agent folder for the WorkerNode version of this alert
      expr: |-
        group by (instance) (
          node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} >= 90
        )
        * on (instance) group_left ()group by (instance) (
          label_replace(kube_node_role{role=~"infra|control-plane|master"}, "instance", "$1", "node", "(.*)")
        )
      for: 15m
      labels:
        severity: critical
        namespace: openshift-monitoring
      annotations:
        message: "Kernel is predicted to exhaust file descriptors limit soon."
  - name: sre-controlplane-node-filesystem-space-filling-upstream
    rules:
    - alert: ControlPlaneNodeFilesystemSpaceFillingUp
      # this is the same as the upstream alert, but groups only for controlplane nodes
      expr: |-
        (node_filesystem_files_free{fstype!="",job="node-exporter"} / node_filesystem_files{fstype!="",job="node-exporter"} * 100 < 20 and predict_linear(node_filesystem_files_free{fstype!="",job="node-exporter"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!="",job="node-exporter"} == 0)
        * on (instance) group_left ()group by (instance) (
          label_replace(kube_node_role{role=~"infra|control-plane|master"}, "instance", "$1", "node", "(.*)")
        )
      for: 1h
      labels:
        severity: critical
        namespace: openshift-monitoring
      annotations:
        message: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up fast.
        summary: Filesystem is predicted to run out of inodes within the next 4 hours.

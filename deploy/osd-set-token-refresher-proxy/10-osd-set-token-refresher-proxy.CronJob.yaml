---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: osd-set-token-refresher-proxy
  namespace: openshift-monitoring
spec:
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  schedule: "*/15 * * * *"
  jobTemplate:
    spec:
      activeDeadlineSeconds: 900
      template:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: "node-role.kubernetes.io/infra"
                    operator: Exists
          tolerations:
          - operator: Exists
            key: node-role.kubernetes.io/infra
            effect: NoSchedule
          serviceAccountName: osd-set-token-refresher-proxy
          restartPolicy: Never
          containers:
          - name: osd-set-token-refresher-proxy
            image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
            imagePullPolicy: Always
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_NS
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            command:
            - /bin/bash
            - -c
            - |
              # ensure we fail if something exits non-zero
              set -o errexit
              set -o nounset

              # extract currently set proxy from the cluster or empty string if not set
              HTTP_PROXY=$(oc get proxy cluster -o jsonpath='{.status.httpProxy}')
              HTTPS_PROXY=$(oc get proxy cluster -o jsonpath='{.status.httpsProxy}')
              NO_PROXY=$(oc get proxy cluster -o jsonpath='{.status.noProxy}')
              
              echo "$(date): Setting proxy env to HTTP_PROXY='${HTTP_PROXY}' HTTPS_PROXY='${HTTPS_PROXY}' NO_PROXY='${NO_PROXY}'"
              oc set env -n openshift-monitoring deploy/token-refresher --containers="token-refresher" HTTP_PROXY="${HTTP_PROXY}" HTTPS_PROXY="${HTTPS_PROXY}" NO_PROXY="${NO_PROXY}"

              exit 0

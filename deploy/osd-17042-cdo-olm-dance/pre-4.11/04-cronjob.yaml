---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: sre-operator-reinstall
  namespace: openshift-custom-domains-operator
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  schedule: "*/30 * * * *"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 100
      template:
        spec:
          serviceAccountName: sre-operator-reinstall-sa
          restartPolicy: Never
          containers:
          - name: operator-reinstaller
            image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
            imagePullPolicy: Always
            command:
            - sh
            - -c
            - |
              #!/bin/bash
              set -euxo pipefail
              NAMESPACE=openshift-custom-domains-operator

              # Fix failing CDO clustersyncs by wiping out last-applied-configuration
              # Ensure we only attempt to patch if the annotation exists
              ANNOTATIONS_EXIST=X$(oc get subscriptions.operators.coreos.com custom-domains-operator -n openshift-custom-domains-operator -o json | jq 'any(.metadata; .Key == "annotations")')
              if [ "$ANNOTATIONS_EXIST" != "Xfalse" ]; then
                if oc get -n "$NAMESPACE" subscriptions.operators.coreos.com custom-domains-operator; then
                  oc patch -n "$NAMESPACE" subscriptions.operators.coreos.com custom-domains-operator --type json --patch='[ { "op": "remove", "path": "/metadata/annotations/kubectl.kubernetes.io~1last-applied-configuration" } ]'
                fi
              fi

              # Check for the presence of CDO v0.1.205 and do nothing, if any other version is found clean up OLM resources
              # Hive will sync these back
              if ! oc -n "$NAMESPACE" get clusterserviceversions.operators.coreos.com custom-domains-operator.v0.1.205-5b1688f; then
                # It is present, so wipe out CDO
                oc -n "$NAMESPACE" delete clusterserviceversions.operators.coreos.com $(oc -n "$NAMESPACE" get clusterserviceversions.operators.coreos.com -ojsonpath='{.items[?(@.spec.displayName=="custom-domains-operator")].metadata.name}') || true
                oc -n "$NAMESPACE" delete installplans.operators.coreos.com -l operators.coreos.com/custom-domains-operator.openshift-custom-domains-operator=""
                oc -n "$NAMESPACE" delete subscriptions.operators.coreos.com custom-domains-operator --ignore-not-found
              fi
              exit 0
